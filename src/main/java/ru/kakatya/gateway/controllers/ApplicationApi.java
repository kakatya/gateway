/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ru.kakatya.gateway.controllers;

import ru.kakatya.gateway.dtos.FinishRegistrationRequestDto;
import ru.kakatya.gateway.dtos.LoanApplicationRequestDTO;
import ru.kakatya.gateway.dtos.LoanOfferDTO;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;

import javax.validation.Valid;
import java.util.List;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-02-10T14:45:24.698772300+04:00[Europe/Saratov]")
@Validated
@Api(value = "application", description = "the application API")
public interface ApplicationApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /application/apply : Choose a loan offer
     *
     * @param loanOfferDTO  (required)
     * @return Loan offer selected (status code 200)
     */
    @ApiOperation(value = "Choose a loan offer", nickname = "applyLoanOffer", notes = "", tags={ "application", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Loan offer selected") })
    @PostMapping(
        value = "/application/apply",
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> applyLoanOffer(@ApiParam(value = "" ,required=true )  @Valid @RequestBody LoanOfferDTO loanOfferDTO) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /application : Create loan application
     *
     * @param loanApplicationRequestDTO  (required)
     * @return list of loans received (status code 200)
     */
    @ApiOperation(value = "Create loan application", nickname = "createApplication", notes = "", response = LoanOfferDTO.class, responseContainer = "List", tags={ "application", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "list of loans received", response = LoanOfferDTO.class, responseContainer = "List") })
    @PostMapping(
        value = "/application",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<List<LoanOfferDTO>> createApplication(@ApiParam(value = "" ,required=true )  @Valid @RequestBody LoanApplicationRequestDTO loanApplicationRequestDTO) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"totalAmount\" : 150000, \"isSalaryClient\" : true, \"monthlyPayment\" : 10000, \"rate\" : 14, \"term\" : 24, \"applicationId\" : 115, \"requestAmount\" : 120000, \"isInsuranceEnabled\" : true }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /application/registration/{applicationId} : Finish registration and loan calculation
     *
     * @param applicationId Id of the loan application (required)
     * @param finishRegistrationRequestDto  (required)
     * @return Scoring passed, application registered (status code 200)
     */
    @ApiOperation(value = "Finish registration and loan calculation", nickname = "finishRegistration", notes = "", tags={ "application", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Scoring passed, application registered") })
    @PostMapping(
        value = "/application/registration/{applicationId}",
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> finishRegistration(@ApiParam(value = "Id of the loan application",required=true) @PathVariable("applicationId") Long applicationId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody FinishRegistrationRequestDto finishRegistrationRequestDto) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
