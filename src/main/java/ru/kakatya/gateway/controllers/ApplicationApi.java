/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ru.kakatya.gateway.controllers;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import ru.kakatya.gateway.dtos.FinishRegistrationRequestDto;
import ru.kakatya.gateway.dtos.LoanApplicationRequestDTO;
import ru.kakatya.gateway.dtos.LoanOfferDTO;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.context.request.NativeWebRequest;

import javax.annotation.Generated;
import javax.validation.Valid;
import java.util.List;
import java.util.Optional;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-02-09T20:18:40.815541500+04:00[GMT+04:00]")
@Validated
@Tag(name = "application", description = "the application API")
public interface ApplicationApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /application/apply : Choose a loan offer
     *
     * @param loanOfferDTO  (required)
     * @return Loan offer selected (status code 200)
     */
    @Operation(
        operationId = "applyLoanOffer",
        summary = "Choose a loan offer",
        tags = { "application" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Loan offer selected")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/application/apply",
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> applyLoanOffer(
        @Parameter(name = "LoanOfferDTO", description = "", required = true) @Valid @RequestBody LoanOfferDTO loanOfferDTO
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /application : Create loan application
     *
     * @param loanApplicationRequestDTO  (required)
     * @return list of loans received (status code 200)
     */
    @Operation(
        operationId = "createApplication",
        summary = "Create loan application",
        tags = { "application" },
        responses = {
            @ApiResponse(responseCode = "200", description = "list of loans received", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = LoanOfferDTO.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/application",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<List<LoanOfferDTO>> createApplication(
        @Parameter(name = "LoanApplicationRequestDTO", description = "", required = true) @Valid @RequestBody LoanApplicationRequestDTO loanApplicationRequestDTO
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"totalAmount\" : 150000, \"isSalaryClient\" : true, \"monthlyPayment\" : 10000, \"rate\" : 14, \"term\" : 24, \"applicationId\" : 115, \"requestAmount\" : 120000, \"isInsuranceEnabled\" : true }, { \"totalAmount\" : 150000, \"isSalaryClient\" : true, \"monthlyPayment\" : 10000, \"rate\" : 14, \"term\" : 24, \"applicationId\" : 115, \"requestAmount\" : 120000, \"isInsuranceEnabled\" : true } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /application/registration/{applicationId} : Finish registration and loan calculation
     *
     * @param applicationId Id of the loan application (required)
     * @param finishRegistrationRequestDto  (required)
     * @return Scoring passed, application registered (status code 200)
     */
    @Operation(
        operationId = "finishRegistration",
        summary = "Finish registration and loan calculation",
        tags = { "application" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Scoring passed, application registered")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/application/registration/{applicationId}",
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> finishRegistration(
        @Parameter(name = "applicationId", description = "Id of the loan application", required = true, in = ParameterIn.PATH) @PathVariable("applicationId") Long applicationId,
        @Parameter(name = "FinishRegistrationRequestDto", description = "", required = true) @Valid @RequestBody FinishRegistrationRequestDto finishRegistrationRequestDto
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
