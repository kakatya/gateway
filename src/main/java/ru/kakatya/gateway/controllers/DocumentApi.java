/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ru.kakatya.gateway.controllers;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.context.request.NativeWebRequest;

import javax.annotation.Generated;
import java.util.Optional;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-02-09T20:18:40.815541500+04:00[GMT+04:00]")
@Validated
@Tag(name = "document", description = "the document API")
public interface DocumentApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /document/{applicationId} : Request the creation of loan documents
     *
     * @param applicationId Id of the loan application (required)
     * @return Loan documents was creation (status code 200)
     */
    @Operation(
        operationId = "requestDocuments",
        summary = "Request the creation of loan documents",
        tags = { "document" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Loan documents was creation")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/document/{applicationId}"
    )
    default ResponseEntity<Void> requestDocuments(
        @Parameter(name = "applicationId", description = "Id of the loan application", required = true, in = ParameterIn.PATH) @PathVariable("applicationId") Long applicationId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /document/{applicationId}/sign : Request ses-code
     *
     * @param applicationId Id of the loan application (required)
     * @return Ses code sent to your email (status code 200)
     */
    @Operation(
        operationId = "requestSesCode",
        summary = "Request ses-code",
        tags = { "document" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Ses code sent to your email")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/document/{applicationId}/sign"
    )
    default ResponseEntity<Void> requestSesCode(
        @Parameter(name = "applicationId", description = "Id of the loan application", required = true, in = ParameterIn.PATH) @PathVariable("applicationId") Long applicationId
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /document/{applicationId}/sign/{sesCode} : Send ses-code
     *
     * @param applicationId Id of the loan application (required)
     * @param sesCode Ses-code from your email (required)
     * @return loan issued! (status code 200)
     */
    @Operation(
        operationId = "sendSesCode",
        summary = "Send ses-code",
        tags = { "document" },
        responses = {
            @ApiResponse(responseCode = "200", description = "loan issued!")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/document/{applicationId}/sign/{sesCode}"
    )
    default ResponseEntity<Void> sendSesCode(
        @Parameter(name = "applicationId", description = "Id of the loan application", required = true, in = ParameterIn.PATH) @PathVariable("applicationId") Long applicationId,
        @Parameter(name = "sesCode", description = "Ses-code from your email", required = true, in = ParameterIn.PATH) @PathVariable("sesCode") String sesCode
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
