/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ru.kakatya.gateway.controllers;

import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-02-10T14:45:24.698772300+04:00[Europe/Saratov]")
@Validated
@Api(value = "document", description = "the document API")
public interface DocumentApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /document/{applicationId} : Request the creation of loan documents
     *
     * @param applicationId Id of the loan application (required)
     * @return Loan documents was creation (status code 200)
     */
    @ApiOperation(value = "Request the creation of loan documents", nickname = "requestDocuments", notes = "", tags={ "document", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Loan documents was creation") })
    @PostMapping(
        value = "/document/{applicationId}"
    )
    default ResponseEntity<Void> requestDocuments(@ApiParam(value = "Id of the loan application",required=true) @PathVariable("applicationId") Long applicationId) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /document/{applicationId}/sign : Request ses-code
     *
     * @param applicationId Id of the loan application (required)
     * @return Ses code sent to your email (status code 200)
     */
    @ApiOperation(value = "Request ses-code", nickname = "requestSesCode", notes = "", tags={ "document", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Ses code sent to your email") })
    @PostMapping (
        value = "/document/{applicationId}/sign"
    )
    default ResponseEntity<Void> requestSesCode(@ApiParam(value = "Id of the loan application",required=true) @PathVariable("applicationId") Long applicationId) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /document/{applicationId}/sign/{sesCode} : Send ses-code
     *
     * @param applicationId Id of the loan application (required)
     * @param sesCode Ses-code from your email (required)
     * @return loan issued! (status code 200)
     */
    @ApiOperation(value = "Send ses-code", nickname = "sendSesCode", notes = "", tags={ "document", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "loan issued!") })
    @PostMapping(
        value = "/document/{applicationId}/sign/{sesCode}"
    )
    default ResponseEntity<Void> sendSesCode(@ApiParam(value = "Id of the loan application",required=true) @PathVariable("applicationId") Long applicationId,@ApiParam(value = "Ses-code from your email",required=true) @PathVariable("sesCode") String sesCode) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
